Keyword arguments come after positional arguments

# Import pandas
import pandas as pd

# Load the 'ransom.csv' into a DataFrame
r = pd.read_csv('ransom.csv')

# Display DataFrame
print(r)


# One or more of the following lines contains an error
# Correct it so that it runs without producing syntax errors

# Plot a graph
plt.plot(x_values, y_values)

# Display the graph
plt.show()




Import pandas as pd

df = pd.read_csv('ransom.csv')   // created a dataframe


Methods in panda

df.head()     // just selects the first 5 rows of df. Insert    in the print function	

df.info()

credit_recors.price.sum()   //calls the price column and gets total



plt.plot(ranson['letter'], ransom['frequency']   //create a plot of the frequencies of each letter in the ransom note.


SELECTING COLUMNS

suspect = credit_records['suspect']

print(suspect)


WHEN COLUMN DOES NOT HAVE SPACE OR SPECIAL CHARACTERS

price = credit_records.price


SELECT ROWS WITH LOGIC

credit_records[credit_records.price > 20.00]  // select rows where price is > $20





PLOTTING


# From matplotlib, import pyplot under the alias plt
from matplotlib import pyplot as plt

# Plot Officer Deshaun's hours_worked vs. day_of_week
plt.plot(deshaun.day_of_week, deshaun.hours_worked)


# Display Deshaun's plot
plt.show()


# Officer Deshaun
plt.plot(deshaun.day_of_week, deshaun.hours_worked, label='Deshaun')

# Add a label to Aditya's plot
plt.plot(aditya.day_of_week, aditya.hours_worked, label='Aditya')

# Add a label to Mengfei's plot
plt.plot(mengfei.day_of_week, mengfei.hours_worked, label='Mengfei')

# Add a command to make the legend display
plt.legend()

# Display plot
plt.show()


# Lines
plt.plot(deshaun.day_of_week, deshaun.hours_worked, label='Deshaun')
plt.plot(aditya.day_of_week, aditya.hours_worked, label='Aditya')
plt.plot(mengfei.day_of_week, mengfei.hours_worked, label='Mengfei')

# Add a title
plt.title("Distribution of Hours Worked")

# Add y-axis label
plt.ylabel("Hours Worked")

# Legend
plt.legend()
# Display plot
plt.show()



// ANNOTATING

# Create plot
plt.plot(six_months.month, six_months.hours_worked)

# Add annotation "Missing June data" at (2.5, 80)
plt.text(2.5, 80, "Missing June data")

# Display graph
plt.show()