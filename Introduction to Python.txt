Slicing and Dicing

my_list[start:end]

The start index will be included, while the end index is not

# Create the areas list
areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]

# Use slicing to create downstairs
downstairs = areas[0:6]

# Use slicing to create upstairs
upstairs= areas[6:10]

# Print out downstairs and upstairs
print(downstairs)
print(upstairs)




However, it's also possible not to specify these indexes. If you don't specify the begin index, Python figures out that you want to start your slice at the beginning of your list. If you don't specify the end index, the slice will go all the way to the last element of your list. 


x = ["a", "b", "c", "d"]
x[:2]    // [a,b]
x[2:]	 // [c, d]
x[:]	 // [a, b, c, d]



Subsetting lists of lists

You saw before that a Python list can contain practically anything; even other lists! To subset lists of lists, you can use the same technique as before: square brackets. Try out the commands in the following code sample in the IPython Shell:

x = [["a", "b", "c"],
     ["d", "e", "f"],
     ["g", "h", "i"]]
x[2][0]			// "g"
x[2][:2]		//['g', 'h']

x[2] results in a list, that you can subset again by adding additional square brackets.